basePath: /api/v1
definitions:
  model.CreateTicketRequest:
    properties:
      price:
        type: integer
      title:
        maxLength: 100
        type: string
      user_id:
        type: string
    required:
    - price
    - title
    - user_id
    type: object
  model.TicketResponse:
    properties:
      created_at:
        type: integer
      id:
        type: integer
      order_id:
        type: string
      price:
        type: integer
      title:
        type: string
      updated_at:
        type: integer
      user_id:
        type: string
    type: object
  model.UpdateTicketRequest:
    properties:
      id:
        type: integer
      price:
        type: integer
      title:
        maxLength: 100
        type: string
      user_id:
        type: string
    required:
    - id
    - price
    - title
    - user_id
    type: object
host: localhost:3000
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: Tickets Service HTTP API Docs
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Tickets Service
  version: "1.0"
paths:
  /tickets:
    get:
      consumes:
      - application/json
      description: Get All Tickets (TODO Pagination).
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.TicketResponse'
            type: array
      summary: Get All Tickets
      tags:
      - Tickets
    post:
      consumes:
      - application/json
      description: Creates a new ticket.
      parameters:
      - description: Ticket Create Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.CreateTicketRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.TicketResponse'
      summary: Create Ticket
      tags:
      - Tickets
  /tickets/{id}:
    get:
      description: Get A Ticket By ID.
      parameters:
      - description: Ticket ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TicketResponse'
      summary: Get A Ticket
      tags:
      - Tickets
    put:
      consumes:
      - application/json
      description: Updates the Ticket Data.
      parameters:
      - description: Ticket Update Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UpdateTicketRequest'
      - description: Ticket ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TicketResponse'
      summary: Update A Ticket
      tags:
      - Tickets
securityDefinitions:
  Session:
    in: header
    name: Cookie
    type: apiKey
swagger: "2.0"
